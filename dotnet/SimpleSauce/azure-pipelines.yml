# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  SAUCE_USERNAME: $(SAUCE_USERNAME)
  SAUCE_ACCESSKEY: $(SAUCE_ACCESS_KEY)

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- powershell: echo $env:SAUCE_USERNAME
  env:
    SAUCE_USERNAME: $(SAUCE.USERNAME)
    SAUCE_ACCESSKEY: $(SAUCE.ACCESSKEY)

    #This is not able to locate the setSauceEnvironmentVariables because of some issue with the path
#- task: PowerShell@2
#  displayName: 'Set Sauce Labs Environment Variables'
#  inputs:
#    targetType: filePath
#    filePath: **\$(BuildConfiguration)\**\setSauceEnvironmentVariables.ps1
#    arguments: '$env:SAUCE_USERNAME $env:SAUCE_ACCESSKEY'

#error: PowerShell exited with code '1'.
#- pwsh: '**\$(BuildConfiguration)\**\setSauceEnvironmentVariables.ps1'

# PowerShell
# Run a PowerShell script on Linux, macOS, or Windows
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Write-Host Sauce username from ADO=> $env:SAUCE_USERNAME' # Required when targetType == Inline
    pwsh: true
    #workingDirectory: # Optional

#need to use the vso tasks so that the env variables persist trhough tasks in ADO
#This works at updating the env variable
#Write-Host ("##vso[task.setvariable variable=SAUCE_USERNAME]test-name")
- powershell: |
   Write-Host "Our Sauce Username in ADO is: $($env:SAUCE_USERNAME)";
   Write-Host "Our Sauce Access Key in ADO is: $($env:SAUCE_ACCESS_KEY)";



- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*Test/*.csproj'
    arguments: '--configuration $(buildConfiguration)'